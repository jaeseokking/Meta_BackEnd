<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0/*EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="master_mapper">

<!-- master 에서 관리자 추가하기 -->
<insert id="AdminA" parameterType="map">
 insert into TB_MEMBER(BIZNO,PASS,CEONAME,CEOCALL)
 	values(#{bizno},#{password},#{ceoname},#{ceocall})
</insert>

<!-- master 가 관리자 search -->
<select id="AdminS" parameterType="String" resultType="map">

 select BIZNO,CEONAME,CEOCALL,IDX
 	from TB_MEMBER
 		where BIZNO LIKE CONCAT('%',#{keyword},'%') or CEONAME LIKE CONCAT('%',#{keyword},'%') 
</select>


<!-- master가 관리자 삭제 -->
<delete id="AdminD" parameterType="map">
		delete from TB_MEMBER
		where IDX in
		<foreach collection="idx" item="item" index="index"
			separator="," open="(" close=")">
			#{item}
		</foreach>
</delete>

<!-- 관리자 정보 업데이트 -->
<update id="AdminU" parameterType="com.real.dto.MemberVo">
 update TB_MEMBER
 	set BIZNO=#{bizno},CEONAME=#{ceoname},CEOCALL=#{ceocall}
 		where IDX = #{idx}
</update>

<!-- 관리자 전체수 가져오기 -->
<select id="countTotalAdmin"  resultType="int">
	select count(*)
		from TB_MEMBER
</select>

<!-- 리스트 가져오기 페이징 처리한 -->
<select id="AdminG" resultType="map" parameterType="com.real.util.Criteria">
	SELECT BIZNO,CEONAME,CEOCALL,IDX
	FROM TB_MEMBER
	ORDER BY IDX DESC
	LIMIT #{pageStart},#{perPageNum}
</select>

<!-- 관리자정보 한개 가져오기 -->
<select id="AdminO" parameterType="String" resultType="com.real.dto.MemberVo">
	select IDX,BIZNO,CEONAME,CEOCALL
		from TB_MEMBER
			where IDX = #{idx}

</select>


<!-- 공지사항 전체수 가져오기 -->
<select id="countTotalNotice"  resultType="int">
	select count(*)
		from TB_NOTICE
</select>

<!-- 공지사항 리스트 가져오기 -->
<select id="NoticeL" resultType="com.real.dto.NoticeVo" parameterType="com.real.util.Criteria">
	SELECT IDX,TITLE,CONTENT,DATE,PERMISSION
	FROM TB_NOTICE
	ORDER BY IDX DESC
	LIMIT #{pageStart},#{perPageNum}
</select>


<!-- 공지사항 추가하기 -->
<insert id="NoticeI" parameterType="com.real.dto.NoticeVo">
 insert into TB_NOTICE(TITLE,CONTENT,DATE,PERMISSION)
 	values(#{title},#{content},NOW(),#{permission})
</insert>

<!-- 공지사항 업데이트 하기 -->
<update id="NoticeU" parameterType="com.real.dto.NoticeVo">
	update TB_NOTICE
	 	set TITLE = #{title},content = #{content}
	 		where IDX = #{idx}
</update>


<!-- 공지사항 삭제 -->
<delete id="NoticeD" parameterType="map">
		delete from TB_NOTICE
		where IDX in
		<foreach collection="idx" item="item" index="index"
			separator="," open="(" close=")">
			#{item}
		</foreach>
</delete>

<!-- 공지사항 한개 가져오기 -->
<select id="NoticeO" parameterType="String" resultType="com.real.dto.NoticeVo">
	select IDX,TITLE,CONTENT,DATE,PERMISSION
		from TB_NOTICE
			where IDX = #{idx}

</select>

<!-- 공지사항 검색하기 -->
<select id="NoticeS" parameterType="String" resultType="com.real.dto.NoticeVo">
 select IDX,TITLE,CONTENT,DATE,PERMISSION
 	from TB_NOTICE
 		where TITLE LIKE CONCAT('%',#{keyword},'%') or CONTENT LIKE CONCAT('%',#{keyword},'%') 
</select>


<!-- 문의 리스트 가져오기 -->
<select id="countTotalEqueryL" resultType="int">
	select count(*)
		from TB_ENQUIRY
</select>


<!-- 문의사항 리스트 가져오기 -->
<select id="EnquiryL" resultType="map" parameterType="com.real.util.Criteria">
	SELECT IDX,TITLE,CONTENT,KIND,WHO
	FROM TB_ENQUIRY
	ORDER BY IDX DESC
	LIMIT #{pageStart},#{perPageNum}
</select>

<!-- 선택한 문의사항 가져오기 -->
<select id="EnquiryO" parameterType="map" resultType="map">
	select IDX,TITLE,CONTENT,KIND,WHO
		from TB_ENQUIRY
			where IDX = #{idx}
</select>

<!-- 문의사항에 답글 남기기 -->
<insert id="EnquiryR" parameterType="map">
	insert into TB_ENQUIRY_REPLY(CONTENT,ENQUIRY_NUM)
		values(#{content},#{idx})
</insert>

<select id="EnquiryF" parameterType="map" resultType="map">
	select * from TB_ENQUIRY
		order by DATE desc
			limit 5
</select>

<select id="LoginM" parameterType="map" resultType="int">
	select count(*)
		from TB_MASTER
			where ID= #{id} and PASSWORD = #{pass}
</select>

</mapper>